#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iCathedra
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Database : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCourseInWork(CourseInWork instance);
    partial void UpdateCourseInWork(CourseInWork instance);
    partial void DeleteCourseInWork(CourseInWork instance);
    partial void InsertDiplomSettings(DiplomSettings instance);
    partial void UpdateDiplomSettings(DiplomSettings instance);
    partial void DeleteDiplomSettings(DiplomSettings instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupInSemestr(GroupInSemestr instance);
    partial void UpdateGroupInSemestr(GroupInSemestr instance);
    partial void DeleteGroupInSemestr(GroupInSemestr instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertPostSalary(PostSalary instance);
    partial void UpdatePostSalary(PostSalary instance);
    partial void DeletePostSalary(PostSalary instance);
    partial void InsertRate(Rate instance);
    partial void UpdateRate(Rate instance);
    partial void DeleteRate(Rate instance);
    partial void InsertSchoolYear(SchoolYear instance);
    partial void UpdateSchoolYear(SchoolYear instance);
    partial void DeleteSchoolYear(SchoolYear instance);
    #endregion
		
		public Database(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Course> Course
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<CourseInWork> CourseInWork
		{
			get
			{
				return this.GetTable<CourseInWork>();
			}
		}
		
		public System.Data.Linq.Table<DiplomSettings> DiplomSettings
		{
			get
			{
				return this.GetTable<DiplomSettings>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Group> Group
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupInSemestr> GroupInSemestr
		{
			get
			{
				return this.GetTable<GroupInSemestr>();
			}
		}
		
		public System.Data.Linq.Table<Post> Post
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<PostSalary> PostSalary
		{
			get
			{
				return this.GetTable<PostSalary>();
			}
		}
		
		public System.Data.Linq.Table<Rate> Rate
		{
			get
			{
				return this.GetTable<Rate>();
			}
		}
		
		public System.Data.Linq.Table<SchoolYear> SchoolYear
		{
			get
			{
				return this.GetTable<SchoolYear>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Speciality;
		
		private string _Name;
		
		private System.Nullable<int> _EmployeeID;
		
		private EntitySet<CourseInWork> _CourseInWork;
		
		private EntitySet<DiplomSettings> _DiplomSettings;
		
		private EntitySet<DiplomSettings> _DiplomSettings_CourseCons;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpecialityChanging(string value);
    partial void OnSpecialityChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public Course()
		{
			this._CourseInWork = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CourseInWork), new Action<CourseInWork>(this.detach_CourseInWork));
			this._DiplomSettings = new EntitySet<DiplomSettings>(new Action<DiplomSettings>(this.attach_DiplomSettings), new Action<DiplomSettings>(this.detach_DiplomSettings));
			this._DiplomSettings_CourseCons = new EntitySet<DiplomSettings>(new Action<DiplomSettings>(this.attach_DiplomSettings_CourseCons), new Action<DiplomSettings>(this.detach_DiplomSettings_CourseCons));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(10)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this.OnSpecialityChanging(value);
					this.SendPropertyChanging();
					this._Speciality = value;
					this.SendPropertyChanged("Speciality");
					this.OnSpecialityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseInWork", Storage="_CourseInWork", ThisKey="ID", OtherKey="CourseID")]
		public EntitySet<CourseInWork> CourseInWork
		{
			get
			{
				return this._CourseInWork;
			}
			set
			{
				this._CourseInWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_DiplomSettings", Storage="_DiplomSettings", ThisKey="ID", OtherKey="DiplomCourseId")]
		public EntitySet<DiplomSettings> DiplomSettings
		{
			get
			{
				return this._DiplomSettings;
			}
			set
			{
				this._DiplomSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_DiplomSettings1", Storage="_DiplomSettings_CourseCons", ThisKey="ID", OtherKey="ConsCourseId")]
		public EntitySet<DiplomSettings> DiplomSettings_CourseCons
		{
			get
			{
				return this._DiplomSettings_CourseCons;
			}
			set
			{
				this._DiplomSettings_CourseCons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Course", Storage="_Employee", ThisKey="EmployeeID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Course.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Course.Add(this);
						this._EmployeeID = value.Id;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_DiplomSettings(DiplomSettings entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_DiplomSettings(DiplomSettings entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_DiplomSettings_CourseCons(DiplomSettings entity)
		{
			this.SendPropertyChanging();
			entity.ConsCourse = this;
		}
		
		private void detach_DiplomSettings_CourseCons(DiplomSettings entity)
		{
			this.SendPropertyChanging();
			entity.ConsCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CourseInWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CourseID;
		
		private System.Nullable<int> _Group1ID;
		
		private System.Nullable<int> _Group2ID;
		
		private System.Nullable<int> _SchoolYearID;
		
		private System.Nullable<short> _Semestr;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<decimal> _LectHours;
		
		private System.Nullable<decimal> _KonsHours;
		
		private System.Nullable<decimal> _ZachHours;
		
		private System.Nullable<decimal> _EkzHours;
		
		private System.Nullable<decimal> _IzHours;
		
		private System.Nullable<decimal> _UprHours;
		
		private System.Nullable<decimal> _LabHours;
		
		private System.Nullable<decimal> _KontrRabHours;
		
		private System.Nullable<decimal> _KrHours;
		
		private System.Nullable<decimal> _KpHours;
		
		private System.Nullable<short> _Fact;
		
		private string _Room;
		
		private int _ID;
		
		private System.Nullable<decimal> _ProchHours;
		
		private System.Nullable<int> _Group3ID;
		
		private System.Nullable<int> _Group4ID;
		
		private System.Nullable<int> _TwinID;
		
		private EntitySet<CourseInWork> _CourseInWork_CourseInWork;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<CourseInWork> _Twin;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<Group> _Group2;
		
		private EntityRef<SchoolYear> _SchoolYear;
		
		private EntityRef<Group> _Group3;
		
		private EntityRef<Group> _Group4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(System.Nullable<int> value);
    partial void OnCourseIDChanged();
    partial void OnGroup1IDChanging(System.Nullable<int> value);
    partial void OnGroup1IDChanged();
    partial void OnGroup2IDChanging(System.Nullable<int> value);
    partial void OnGroup2IDChanged();
    partial void OnSchoolYearIDChanging(System.Nullable<int> value);
    partial void OnSchoolYearIDChanged();
    partial void OnSemestrChanging(System.Nullable<short> value);
    partial void OnSemestrChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnLectHoursChanging(System.Nullable<decimal> value);
    partial void OnLectHoursChanged();
    partial void OnKonsHoursChanging(System.Nullable<decimal> value);
    partial void OnKonsHoursChanged();
    partial void OnZachHoursChanging(System.Nullable<decimal> value);
    partial void OnZachHoursChanged();
    partial void OnEkzHoursChanging(System.Nullable<decimal> value);
    partial void OnEkzHoursChanged();
    partial void OnIzHoursChanging(System.Nullable<decimal> value);
    partial void OnIzHoursChanged();
    partial void OnUprHoursChanging(System.Nullable<decimal> value);
    partial void OnUprHoursChanged();
    partial void OnLabHoursChanging(System.Nullable<decimal> value);
    partial void OnLabHoursChanged();
    partial void OnKontrRabHoursChanging(System.Nullable<decimal> value);
    partial void OnKontrRabHoursChanged();
    partial void OnKrHoursChanging(System.Nullable<decimal> value);
    partial void OnKrHoursChanged();
    partial void OnKpHoursChanging(System.Nullable<decimal> value);
    partial void OnKpHoursChanged();
    partial void OnFactChanging(System.Nullable<short> value);
    partial void OnFactChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProchHoursChanging(System.Nullable<decimal> value);
    partial void OnProchHoursChanged();
    partial void OnGroup3IDChanging(System.Nullable<int> value);
    partial void OnGroup3IDChanged();
    partial void OnGroup4IDChanging(System.Nullable<int> value);
    partial void OnGroup4IDChanged();
    partial void OnTwinIDChanging(System.Nullable<int> value);
    partial void OnTwinIDChanged();
    #endregion
		
		public CourseInWork()
		{
			this._CourseInWork_CourseInWork = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CourseInWork_CourseInWork), new Action<CourseInWork>(this.detach_CourseInWork_CourseInWork));
			this._Course = default(EntityRef<Course>);
			this._Twin = default(EntityRef<CourseInWork>);
			this._Employee = default(EntityRef<Employee>);
			this._Group = default(EntityRef<Group>);
			this._Group2 = default(EntityRef<Group>);
			this._SchoolYear = default(EntityRef<SchoolYear>);
			this._Group3 = default(EntityRef<Group>);
			this._Group4 = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int")]
		public System.Nullable<int> CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group1ID", DbType="Int")]
		public System.Nullable<int> Group1ID
		{
			get
			{
				return this._Group1ID;
			}
			set
			{
				if ((this._Group1ID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup1IDChanging(value);
					this.SendPropertyChanging();
					this._Group1ID = value;
					this.SendPropertyChanged("Group1ID");
					this.OnGroup1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group2ID", DbType="Int")]
		public System.Nullable<int> Group2ID
		{
			get
			{
				return this._Group2ID;
			}
			set
			{
				if ((this._Group2ID != value))
				{
					if (this._Group2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup2IDChanging(value);
					this.SendPropertyChanging();
					this._Group2ID = value;
					this.SendPropertyChanged("Group2ID");
					this.OnGroup2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYearID", DbType="Int")]
		public System.Nullable<int> SchoolYearID
		{
			get
			{
				return this._SchoolYearID;
			}
			set
			{
				if ((this._SchoolYearID != value))
				{
					if (this._SchoolYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolYearIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolYearID = value;
					this.SendPropertyChanged("SchoolYearID");
					this.OnSchoolYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semestr", DbType="SmallInt")]
		public System.Nullable<short> Semestr
		{
			get
			{
				return this._Semestr;
			}
			set
			{
				if ((this._Semestr != value))
				{
					this.OnSemestrChanging(value);
					this.SendPropertyChanging();
					this._Semestr = value;
					this.SendPropertyChanged("Semestr");
					this.OnSemestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LectHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> LectHours
		{
			get
			{
				return this._LectHours;
			}
			set
			{
				if ((this._LectHours != value))
				{
					this.OnLectHoursChanging(value);
					this.SendPropertyChanging();
					this._LectHours = value;
					this.SendPropertyChanged("LectHours");
					this.OnLectHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KonsHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> KonsHours
		{
			get
			{
				return this._KonsHours;
			}
			set
			{
				if ((this._KonsHours != value))
				{
					this.OnKonsHoursChanging(value);
					this.SendPropertyChanging();
					this._KonsHours = value;
					this.SendPropertyChanged("KonsHours");
					this.OnKonsHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZachHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ZachHours
		{
			get
			{
				return this._ZachHours;
			}
			set
			{
				if ((this._ZachHours != value))
				{
					this.OnZachHoursChanging(value);
					this.SendPropertyChanging();
					this._ZachHours = value;
					this.SendPropertyChanged("ZachHours");
					this.OnZachHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EkzHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> EkzHours
		{
			get
			{
				return this._EkzHours;
			}
			set
			{
				if ((this._EkzHours != value))
				{
					this.OnEkzHoursChanging(value);
					this.SendPropertyChanging();
					this._EkzHours = value;
					this.SendPropertyChanged("EkzHours");
					this.OnEkzHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IzHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> IzHours
		{
			get
			{
				return this._IzHours;
			}
			set
			{
				if ((this._IzHours != value))
				{
					this.OnIzHoursChanging(value);
					this.SendPropertyChanging();
					this._IzHours = value;
					this.SendPropertyChanged("IzHours");
					this.OnIzHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UprHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> UprHours
		{
			get
			{
				return this._UprHours;
			}
			set
			{
				if ((this._UprHours != value))
				{
					this.OnUprHoursChanging(value);
					this.SendPropertyChanging();
					this._UprHours = value;
					this.SendPropertyChanged("UprHours");
					this.OnUprHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> LabHours
		{
			get
			{
				return this._LabHours;
			}
			set
			{
				if ((this._LabHours != value))
				{
					this.OnLabHoursChanging(value);
					this.SendPropertyChanging();
					this._LabHours = value;
					this.SendPropertyChanged("LabHours");
					this.OnLabHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KontrRabHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> KontrRabHours
		{
			get
			{
				return this._KontrRabHours;
			}
			set
			{
				if ((this._KontrRabHours != value))
				{
					this.OnKontrRabHoursChanging(value);
					this.SendPropertyChanging();
					this._KontrRabHours = value;
					this.SendPropertyChanged("KontrRabHours");
					this.OnKontrRabHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KrHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> KrHours
		{
			get
			{
				return this._KrHours;
			}
			set
			{
				if ((this._KrHours != value))
				{
					this.OnKrHoursChanging(value);
					this.SendPropertyChanging();
					this._KrHours = value;
					this.SendPropertyChanged("KrHours");
					this.OnKrHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KpHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> KpHours
		{
			get
			{
				return this._KpHours;
			}
			set
			{
				if ((this._KpHours != value))
				{
					this.OnKpHoursChanging(value);
					this.SendPropertyChanging();
					this._KpHours = value;
					this.SendPropertyChanged("KpHours");
					this.OnKpHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fact", DbType="SmallInt")]
		public System.Nullable<short> Fact
		{
			get
			{
				return this._Fact;
			}
			set
			{
				if ((this._Fact != value))
				{
					this.OnFactChanging(value);
					this.SendPropertyChanging();
					this._Fact = value;
					this.SendPropertyChanged("Fact");
					this.OnFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="NVarChar(20)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProchHours", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ProchHours
		{
			get
			{
				return this._ProchHours;
			}
			set
			{
				if ((this._ProchHours != value))
				{
					this.OnProchHoursChanging(value);
					this.SendPropertyChanging();
					this._ProchHours = value;
					this.SendPropertyChanged("ProchHours");
					this.OnProchHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group3ID", DbType="Int")]
		public System.Nullable<int> Group3ID
		{
			get
			{
				return this._Group3ID;
			}
			set
			{
				if ((this._Group3ID != value))
				{
					if (this._Group3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup3IDChanging(value);
					this.SendPropertyChanging();
					this._Group3ID = value;
					this.SendPropertyChanged("Group3ID");
					this.OnGroup3IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group4ID", DbType="Int")]
		public System.Nullable<int> Group4ID
		{
			get
			{
				return this._Group4ID;
			}
			set
			{
				if ((this._Group4ID != value))
				{
					if (this._Group4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup4IDChanging(value);
					this.SendPropertyChanging();
					this._Group4ID = value;
					this.SendPropertyChanged("Group4ID");
					this.OnGroup4IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwinID", DbType="Int")]
		public System.Nullable<int> TwinID
		{
			get
			{
				return this._TwinID;
			}
			set
			{
				if ((this._TwinID != value))
				{
					if (this._Twin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTwinIDChanging(value);
					this.SendPropertyChanging();
					this._TwinID = value;
					this.SendPropertyChanged("TwinID");
					this.OnTwinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Storage="_CourseInWork_CourseInWork", ThisKey="ID", OtherKey="TwinID")]
		public EntitySet<CourseInWork> CourseInWork_CourseInWork
		{
			get
			{
				return this._CourseInWork_CourseInWork;
			}
			set
			{
				this._CourseInWork_CourseInWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseInWork", Storage="_Course", ThisKey="CourseID", OtherKey="ID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseInWork.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseInWork.Add(this);
						this._CourseID = value.ID;
					}
					else
					{
						this._CourseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInWork_CourseInWork", Storage="_Twin", ThisKey="TwinID", OtherKey="ID", IsForeignKey=true)]
		public CourseInWork Twin
		{
			get
			{
				return this._Twin.Entity;
			}
			set
			{
				CourseInWork previousValue = this._Twin.Entity;
				if (((previousValue != value) 
							|| (this._Twin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Twin.Entity = null;
						previousValue.CourseInWork_CourseInWork.Remove(this);
					}
					this._Twin.Entity = value;
					if ((value != null))
					{
						value.CourseInWork_CourseInWork.Add(this);
						this._TwinID = value.ID;
					}
					else
					{
						this._TwinID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Twin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CourseInWork", Storage="_Employee", ThisKey="EmployeeID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CourseInWork.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CourseInWork.Add(this);
						this._EmployeeID = value.Id;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork", Storage="_Group", ThisKey="Group1ID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.CourseInWork.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.CourseInWork.Add(this);
						this._Group1ID = value.ID;
					}
					else
					{
						this._Group1ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork1", Storage="_Group2", ThisKey="Group2ID", OtherKey="ID", IsForeignKey=true)]
		public Group Group2
		{
			get
			{
				return this._Group2.Entity;
			}
			set
			{
				Group previousValue = this._Group2.Entity;
				if (((previousValue != value) 
							|| (this._Group2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group2.Entity = null;
						previousValue.CourseInWork_Group2.Remove(this);
					}
					this._Group2.Entity = value;
					if ((value != null))
					{
						value.CourseInWork_Group2.Add(this);
						this._Group2ID = value.ID;
					}
					else
					{
						this._Group2ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_CourseInWork", Storage="_SchoolYear", ThisKey="SchoolYearID", OtherKey="ID", IsForeignKey=true)]
		public SchoolYear SchoolYear
		{
			get
			{
				return this._SchoolYear.Entity;
			}
			set
			{
				SchoolYear previousValue = this._SchoolYear.Entity;
				if (((previousValue != value) 
							|| (this._SchoolYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolYear.Entity = null;
						previousValue.CourseInWork.Remove(this);
					}
					this._SchoolYear.Entity = value;
					if ((value != null))
					{
						value.CourseInWork.Add(this);
						this._SchoolYearID = value.ID;
					}
					else
					{
						this._SchoolYearID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SchoolYear");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork2", Storage="_Group3", ThisKey="Group3ID", OtherKey="ID", IsForeignKey=true)]
		public Group Group3
		{
			get
			{
				return this._Group3.Entity;
			}
			set
			{
				Group previousValue = this._Group3.Entity;
				if (((previousValue != value) 
							|| (this._Group3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group3.Entity = null;
						previousValue.CoursInWork_Group3.Remove(this);
					}
					this._Group3.Entity = value;
					if ((value != null))
					{
						value.CoursInWork_Group3.Add(this);
						this._Group3ID = value.ID;
					}
					else
					{
						this._Group3ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork3", Storage="_Group4", ThisKey="Group4ID", OtherKey="ID", IsForeignKey=true)]
		public Group Group4
		{
			get
			{
				return this._Group4.Entity;
			}
			set
			{
				Group previousValue = this._Group4.Entity;
				if (((previousValue != value) 
							|| (this._Group4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group4.Entity = null;
						previousValue.CoursInWork_Group4.Remove(this);
					}
					this._Group4.Entity = value;
					if ((value != null))
					{
						value.CoursInWork_Group4.Add(this);
						this._Group4ID = value.ID;
					}
					else
					{
						this._Group4ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseInWork_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Twin = this;
		}
		
		private void detach_CourseInWork_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Twin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DiplomSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiplomCourseId;
		
		private string _CourseName;
		
		private int _ConsCourseId;
		
		private int _DiplomHoursPerStudent;
		
		private int _ConsHoursPerStudent;
		
		private int _Id;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Course> _ConsCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiplomCourseIdChanging(int value);
    partial void OnDiplomCourseIdChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnConsCourseIdChanging(int value);
    partial void OnConsCourseIdChanged();
    partial void OnDiplomHoursPerStudentChanging(int value);
    partial void OnDiplomHoursPerStudentChanged();
    partial void OnConsHoursPerStudentChanging(int value);
    partial void OnConsHoursPerStudentChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public DiplomSettings()
		{
			this._Course = default(EntityRef<Course>);
			this._ConsCourse = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomCourseId", DbType="Int NOT NULL")]
		public int DiplomCourseId
		{
			get
			{
				return this._DiplomCourseId;
			}
			set
			{
				if ((this._DiplomCourseId != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiplomCourseIdChanging(value);
					this.SendPropertyChanging();
					this._DiplomCourseId = value;
					this.SendPropertyChanged("DiplomCourseId");
					this.OnDiplomCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsCourseId", DbType="Int NOT NULL")]
		public int ConsCourseId
		{
			get
			{
				return this._ConsCourseId;
			}
			set
			{
				if ((this._ConsCourseId != value))
				{
					if (this._ConsCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsCourseIdChanging(value);
					this.SendPropertyChanging();
					this._ConsCourseId = value;
					this.SendPropertyChanged("ConsCourseId");
					this.OnConsCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomHoursPerStudent", DbType="Int NOT NULL")]
		public int DiplomHoursPerStudent
		{
			get
			{
				return this._DiplomHoursPerStudent;
			}
			set
			{
				if ((this._DiplomHoursPerStudent != value))
				{
					this.OnDiplomHoursPerStudentChanging(value);
					this.SendPropertyChanging();
					this._DiplomHoursPerStudent = value;
					this.SendPropertyChanged("DiplomHoursPerStudent");
					this.OnDiplomHoursPerStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsHoursPerStudent", DbType="Int NOT NULL")]
		public int ConsHoursPerStudent
		{
			get
			{
				return this._ConsHoursPerStudent;
			}
			set
			{
				if ((this._ConsHoursPerStudent != value))
				{
					this.OnConsHoursPerStudentChanging(value);
					this.SendPropertyChanging();
					this._ConsHoursPerStudent = value;
					this.SendPropertyChanged("ConsHoursPerStudent");
					this.OnConsHoursPerStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_DiplomSettings", Storage="_Course", ThisKey="DiplomCourseId", OtherKey="ID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.DiplomSettings.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.DiplomSettings.Add(this);
						this._DiplomCourseId = value.ID;
					}
					else
					{
						this._DiplomCourseId = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_DiplomSettings1", Storage="_ConsCourse", ThisKey="ConsCourseId", OtherKey="ID", IsForeignKey=true)]
		public Course ConsCourse
		{
			get
			{
				return this._ConsCourse.Entity;
			}
			set
			{
				Course previousValue = this._ConsCourse.Entity;
				if (((previousValue != value) 
							|| (this._ConsCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConsCourse.Entity = null;
						previousValue.DiplomSettings_CourseCons.Remove(this);
					}
					this._ConsCourse.Entity = value;
					if ((value != null))
					{
						value.DiplomSettings_CourseCons.Add(this);
						this._ConsCourseId = value.ID;
					}
					else
					{
						this._ConsCourseId = default(int);
					}
					this.SendPropertyChanged("ConsCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Fio;
		
		private int _Id;
		
		private string _Comment;
		
		private System.Nullable<int> _PostID;
		
		private bool _NonActive;
		
		private string _Phone;
		
		private string _E_Mail;
		
		private EntitySet<Course> _Course;
		
		private EntitySet<CourseInWork> _CourseInWork;
		
		private EntitySet<Rate> _Rate;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFioChanging(string value);
    partial void OnFioChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPostIDChanging(System.Nullable<int> value);
    partial void OnPostIDChanged();
    partial void OnNonActiveChanging(bool value);
    partial void OnNonActiveChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    #endregion
		
		public Employee()
		{
			this._Course = new EntitySet<Course>(new Action<Course>(this.attach_Course), new Action<Course>(this.detach_Course));
			this._CourseInWork = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CourseInWork), new Action<CourseInWork>(this.detach_CourseInWork));
			this._Rate = new EntitySet<Rate>(new Action<Rate>(this.attach_Rate), new Action<Rate>(this.detach_Rate));
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fio", DbType="NVarChar(100)")]
		public string Fio
		{
			get
			{
				return this._Fio;
			}
			set
			{
				if ((this._Fio != value))
				{
					this.OnFioChanging(value);
					this.SendPropertyChanging();
					this._Fio = value;
					this.SendPropertyChanged("Fio");
					this.OnFioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int")]
		public System.Nullable<int> PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonActive", DbType="Bit NOT NULL")]
		public bool NonActive
		{
			get
			{
				return this._NonActive;
			}
			set
			{
				if ((this._NonActive != value))
				{
					this.OnNonActiveChanging(value);
					this.SendPropertyChanging();
					this._NonActive = value;
					this.SendPropertyChanged("NonActive");
					this.OnNonActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="E-mail", Storage="_E_Mail", DbType="NVarChar(100)")]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Course", Storage="_Course", ThisKey="Id", OtherKey="EmployeeID")]
		public EntitySet<Course> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				this._Course.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CourseInWork", Storage="_CourseInWork", ThisKey="Id", OtherKey="EmployeeID")]
		public EntitySet<CourseInWork> CourseInWork
		{
			get
			{
				return this._CourseInWork;
			}
			set
			{
				this._CourseInWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Rate", Storage="_Rate", ThisKey="Id", OtherKey="EmployeeID")]
		public EntitySet<Rate> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				this._Rate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Employee", Storage="_Post", ThisKey="PostID", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._PostID = value.Id;
					}
					else
					{
						this._PostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Course(Course entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Rate(Rate entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Rate(Rate entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Group1;
		
		private string _Speciality;
		
		private string _SpecialityName;
		
		private int _ID;
		
		private System.Nullable<bool> _IsOchniki;
		
		private EntitySet<CourseInWork> _CourseInWork;
		
		private EntitySet<CourseInWork> _CourseInWork_Group2;
		
		private EntitySet<CourseInWork> _CoursInWork_Group3;
		
		private EntitySet<CourseInWork> _CoursInWork_Group4;
		
		private EntitySet<GroupInSemestr> _GroupInSemestr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroup1Changing(string value);
    partial void OnGroup1Changed();
    partial void OnSpecialityChanging(string value);
    partial void OnSpecialityChanged();
    partial void OnSpecialityNameChanging(string value);
    partial void OnSpecialityNameChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsOchnikiChanging(System.Nullable<bool> value);
    partial void OnIsOchnikiChanged();
    #endregion
		
		public Group()
		{
			this._CourseInWork = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CourseInWork), new Action<CourseInWork>(this.detach_CourseInWork));
			this._CourseInWork_Group2 = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CourseInWork_Group2), new Action<CourseInWork>(this.detach_CourseInWork_Group2));
			this._CoursInWork_Group3 = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CoursInWork_Group3), new Action<CourseInWork>(this.detach_CoursInWork_Group3));
			this._CoursInWork_Group4 = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CoursInWork_Group4), new Action<CourseInWork>(this.detach_CoursInWork_Group4));
			this._GroupInSemestr = new EntitySet<GroupInSemestr>(new Action<GroupInSemestr>(this.attach_GroupInSemestr), new Action<GroupInSemestr>(this.detach_GroupInSemestr));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Group", Storage="_Group1", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Group1
		{
			get
			{
				return this._Group1;
			}
			set
			{
				if ((this._Group1 != value))
				{
					this.OnGroup1Changing(value);
					this.SendPropertyChanging();
					this._Group1 = value;
					this.SendPropertyChanged("Group1");
					this.OnGroup1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(10)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this.OnSpecialityChanging(value);
					this.SendPropertyChanging();
					this._Speciality = value;
					this.SendPropertyChanged("Speciality");
					this.OnSpecialityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityName", DbType="NVarChar(100)")]
		public string SpecialityName
		{
			get
			{
				return this._SpecialityName;
			}
			set
			{
				if ((this._SpecialityName != value))
				{
					this.OnSpecialityNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialityName = value;
					this.SendPropertyChanged("SpecialityName");
					this.OnSpecialityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOchniki", DbType="Bit")]
		public System.Nullable<bool> IsOchniki
		{
			get
			{
				return this._IsOchniki;
			}
			set
			{
				if ((this._IsOchniki != value))
				{
					this.OnIsOchnikiChanging(value);
					this.SendPropertyChanging();
					this._IsOchniki = value;
					this.SendPropertyChanged("IsOchniki");
					this.OnIsOchnikiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork", Storage="_CourseInWork", ThisKey="ID", OtherKey="Group1ID")]
		public EntitySet<CourseInWork> CourseInWork
		{
			get
			{
				return this._CourseInWork;
			}
			set
			{
				this._CourseInWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork1", Storage="_CourseInWork_Group2", ThisKey="ID", OtherKey="Group2ID")]
		public EntitySet<CourseInWork> CourseInWork_Group2
		{
			get
			{
				return this._CourseInWork_Group2;
			}
			set
			{
				this._CourseInWork_Group2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork2", Storage="_CoursInWork_Group3", ThisKey="ID", OtherKey="Group3ID")]
		public EntitySet<CourseInWork> CoursInWork_Group3
		{
			get
			{
				return this._CoursInWork_Group3;
			}
			set
			{
				this._CoursInWork_Group3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_CourseInWork3", Storage="_CoursInWork_Group4", ThisKey="ID", OtherKey="Group4ID")]
		public EntitySet<CourseInWork> CoursInWork_Group4
		{
			get
			{
				return this._CoursInWork_Group4;
			}
			set
			{
				this._CoursInWork_Group4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupInSemestr", Storage="_GroupInSemestr", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<GroupInSemestr> GroupInSemestr
		{
			get
			{
				return this._GroupInSemestr;
			}
			set
			{
				this._GroupInSemestr.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_CourseInWork_Group2(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group2 = this;
		}
		
		private void detach_CourseInWork_Group2(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group2 = null;
		}
		
		private void attach_CoursInWork_Group3(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group3 = this;
		}
		
		private void detach_CoursInWork_Group3(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group3 = null;
		}
		
		private void attach_CoursInWork_Group4(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group4 = this;
		}
		
		private void detach_CoursInWork_Group4(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.Group4 = null;
		}
		
		private void attach_GroupInSemestr(GroupInSemestr entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupInSemestr(GroupInSemestr entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class GroupInSemestr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GroupID;
		
		private System.Nullable<int> _SchoolYear;
		
		private System.Nullable<short> _Semestr;
		
		private System.Nullable<short> _QuantityCommercial;
		
		private System.Nullable<short> _QuantityBudget;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<SchoolYear> _SchoolYearSchoolYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnSchoolYearChanging(System.Nullable<int> value);
    partial void OnSchoolYearChanged();
    partial void OnSemestrChanging(System.Nullable<short> value);
    partial void OnSemestrChanged();
    partial void OnQuantityCommercialChanging(System.Nullable<short> value);
    partial void OnQuantityCommercialChanged();
    partial void OnQuantityBudgetChanging(System.Nullable<short> value);
    partial void OnQuantityBudgetChanged();
    #endregion
		
		public GroupInSemestr()
		{
			this._Group = default(EntityRef<Group>);
			this._SchoolYearSchoolYear = default(EntityRef<SchoolYear>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYear", DbType="Int")]
		public System.Nullable<int> SchoolYear
		{
			get
			{
				return this._SchoolYear;
			}
			set
			{
				if ((this._SchoolYear != value))
				{
					if (this._SchoolYearSchoolYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolYearChanging(value);
					this.SendPropertyChanging();
					this._SchoolYear = value;
					this.SendPropertyChanged("SchoolYear");
					this.OnSchoolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semestr", DbType="SmallInt")]
		public System.Nullable<short> Semestr
		{
			get
			{
				return this._Semestr;
			}
			set
			{
				if ((this._Semestr != value))
				{
					this.OnSemestrChanging(value);
					this.SendPropertyChanging();
					this._Semestr = value;
					this.SendPropertyChanged("Semestr");
					this.OnSemestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityCommercial", DbType="SmallInt")]
		public System.Nullable<short> QuantityCommercial
		{
			get
			{
				return this._QuantityCommercial;
			}
			set
			{
				if ((this._QuantityCommercial != value))
				{
					this.OnQuantityCommercialChanging(value);
					this.SendPropertyChanging();
					this._QuantityCommercial = value;
					this.SendPropertyChanged("QuantityCommercial");
					this.OnQuantityCommercialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityBudget", DbType="SmallInt")]
		public System.Nullable<short> QuantityBudget
		{
			get
			{
				return this._QuantityBudget;
			}
			set
			{
				if ((this._QuantityBudget != value))
				{
					this.OnQuantityBudgetChanging(value);
					this.SendPropertyChanging();
					this._QuantityBudget = value;
					this.SendPropertyChanged("QuantityBudget");
					this.OnQuantityBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupInSemestr", Storage="_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupInSemestr.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupInSemestr.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_GroupInSemestr", Storage="_SchoolYearSchoolYear", ThisKey="SchoolYear", OtherKey="ID", IsForeignKey=true)]
		public SchoolYear SchoolYearSchoolYear
		{
			get
			{
				return this._SchoolYearSchoolYear.Entity;
			}
			set
			{
				SchoolYear previousValue = this._SchoolYearSchoolYear.Entity;
				if (((previousValue != value) 
							|| (this._SchoolYearSchoolYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolYearSchoolYear.Entity = null;
						previousValue.GroupInSemestr.Remove(this);
					}
					this._SchoolYearSchoolYear.Entity = value;
					if ((value != null))
					{
						value.GroupInSemestr.Add(this);
						this._SchoolYear = value.ID;
					}
					else
					{
						this._SchoolYear = default(Nullable<int>);
					}
					this.SendPropertyChanged("SchoolYearSchoolYear");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _ShortName;
		
		private EntitySet<Employee> _Employee;
		
		private EntitySet<PostSalary> _PostSalary;
		
		private EntitySet<Rate> _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Post()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			this._PostSalary = new EntitySet<PostSalary>(new Action<PostSalary>(this.attach_PostSalary), new Action<PostSalary>(this.detach_PostSalary));
			this._Rate = new EntitySet<Rate>(new Action<Rate>(this.attach_Rate), new Action<Rate>(this.detach_Rate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Employee", Storage="_Employee", ThisKey="Id", OtherKey="PostID")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostSalary", Storage="_PostSalary", ThisKey="Id", OtherKey="PostID")]
		public EntitySet<PostSalary> PostSalary
		{
			get
			{
				return this._PostSalary;
			}
			set
			{
				this._PostSalary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Rate", Storage="_Rate", ThisKey="Id", OtherKey="PostID")]
		public EntitySet<Rate> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				this._Rate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_PostSalary(PostSalary entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PostSalary(PostSalary entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_Rate(Rate entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Rate(Rate entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PostSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PostID;
		
		private System.Nullable<int> _RateInHours;
		
		private System.Nullable<decimal> _K;
		
		private int _SchoolYearID;
		
		private System.Nullable<decimal> _BaseSalary;
		
		private System.Nullable<decimal> _PostSalary1;
		
		private System.Nullable<decimal> _GradeSurcharge;
		
		private System.Nullable<decimal> _PostSurcharge;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<SchoolYear> _SchoolYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    partial void OnRateInHoursChanging(System.Nullable<int> value);
    partial void OnRateInHoursChanged();
    partial void OnKChanging(System.Nullable<decimal> value);
    partial void OnKChanged();
    partial void OnSchoolYearIDChanging(int value);
    partial void OnSchoolYearIDChanged();
    partial void OnBaseSalaryChanging(System.Nullable<decimal> value);
    partial void OnBaseSalaryChanged();
    partial void OnPostSalary1Changing(System.Nullable<decimal> value);
    partial void OnPostSalary1Changed();
    partial void OnGradeSurchargeChanging(System.Nullable<decimal> value);
    partial void OnGradeSurchargeChanged();
    partial void OnPostSurchargeChanging(System.Nullable<decimal> value);
    partial void OnPostSurchargeChanged();
    #endregion
		
		public PostSalary()
		{
			this._Post = default(EntityRef<Post>);
			this._SchoolYear = default(EntityRef<SchoolYear>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateInHours", DbType="Int")]
		public System.Nullable<int> RateInHours
		{
			get
			{
				return this._RateInHours;
			}
			set
			{
				if ((this._RateInHours != value))
				{
					this.OnRateInHoursChanging(value);
					this.SendPropertyChanging();
					this._RateInHours = value;
					this.SendPropertyChanged("RateInHours");
					this.OnRateInHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Decimal(8,7)")]
		public System.Nullable<decimal> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYearID", DbType="Int NOT NULL")]
		public int SchoolYearID
		{
			get
			{
				return this._SchoolYearID;
			}
			set
			{
				if ((this._SchoolYearID != value))
				{
					if (this._SchoolYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolYearIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolYearID = value;
					this.SendPropertyChanged("SchoolYearID");
					this.OnSchoolYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseSalary", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BaseSalary
		{
			get
			{
				return this._BaseSalary;
			}
			set
			{
				if ((this._BaseSalary != value))
				{
					this.OnBaseSalaryChanging(value);
					this.SendPropertyChanging();
					this._BaseSalary = value;
					this.SendPropertyChanged("BaseSalary");
					this.OnBaseSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PostSalary", Storage="_PostSalary1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PostSalary1
		{
			get
			{
				return this._PostSalary1;
			}
			set
			{
				if ((this._PostSalary1 != value))
				{
					this.OnPostSalary1Changing(value);
					this.SendPropertyChanging();
					this._PostSalary1 = value;
					this.SendPropertyChanged("PostSalary1");
					this.OnPostSalary1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeSurcharge", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GradeSurcharge
		{
			get
			{
				return this._GradeSurcharge;
			}
			set
			{
				if ((this._GradeSurcharge != value))
				{
					this.OnGradeSurchargeChanging(value);
					this.SendPropertyChanging();
					this._GradeSurcharge = value;
					this.SendPropertyChanged("GradeSurcharge");
					this.OnGradeSurchargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostSurcharge", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PostSurcharge
		{
			get
			{
				return this._PostSurcharge;
			}
			set
			{
				if ((this._PostSurcharge != value))
				{
					this.OnPostSurchargeChanging(value);
					this.SendPropertyChanging();
					this._PostSurcharge = value;
					this.SendPropertyChanged("PostSurcharge");
					this.OnPostSurchargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostSalary", Storage="_Post", ThisKey="PostID", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PostSalary.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PostSalary.Add(this);
						this._PostID = value.Id;
					}
					else
					{
						this._PostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_PostSalary", Storage="_SchoolYear", ThisKey="SchoolYearID", OtherKey="ID", IsForeignKey=true)]
		public SchoolYear SchoolYear
		{
			get
			{
				return this._SchoolYear.Entity;
			}
			set
			{
				SchoolYear previousValue = this._SchoolYear.Entity;
				if (((previousValue != value) 
							|| (this._SchoolYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolYear.Entity = null;
						previousValue.PostSalary.Remove(this);
					}
					this._SchoolYear.Entity = value;
					if ((value != null))
					{
						value.PostSalary.Add(this);
						this._SchoolYearID = value.ID;
					}
					else
					{
						this._SchoolYearID = default(int);
					}
					this.SendPropertyChanged("SchoolYear");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _EmployeeID;
		
		private int _SchoolYearID;
		
		private System.Nullable<decimal> _Rate1;
		
		private int _ID;
		
		private System.Nullable<int> _PostID;
		
		private System.Nullable<bool> _IsTradeUnionMember;
		
		private int _PochFondLimit;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<SchoolYear> _SchoolYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnSchoolYearIDChanging(int value);
    partial void OnSchoolYearIDChanged();
    partial void OnRate1Changing(System.Nullable<decimal> value);
    partial void OnRate1Changed();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostIDChanging(System.Nullable<int> value);
    partial void OnPostIDChanged();
    partial void OnIsTradeUnionMemberChanging(System.Nullable<bool> value);
    partial void OnIsTradeUnionMemberChanged();
    partial void OnPochFondLimitChanging(int value);
    partial void OnPochFondLimitChanged();
    #endregion
		
		public Rate()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Post = default(EntityRef<Post>);
			this._SchoolYear = default(EntityRef<SchoolYear>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYearID", DbType="Int NOT NULL")]
		public int SchoolYearID
		{
			get
			{
				return this._SchoolYearID;
			}
			set
			{
				if ((this._SchoolYearID != value))
				{
					if (this._SchoolYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolYearIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolYearID = value;
					this.SendPropertyChanged("SchoolYearID");
					this.OnSchoolYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rate", Storage="_Rate1", DbType="Decimal(4,3)")]
		public System.Nullable<decimal> Rate1
		{
			get
			{
				return this._Rate1;
			}
			set
			{
				if ((this._Rate1 != value))
				{
					this.OnRate1Changing(value);
					this.SendPropertyChanging();
					this._Rate1 = value;
					this.SendPropertyChanged("Rate1");
					this.OnRate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int")]
		public System.Nullable<int> PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTradeUnionMember", DbType="Bit")]
		public System.Nullable<bool> IsTradeUnionMember
		{
			get
			{
				return this._IsTradeUnionMember;
			}
			set
			{
				if ((this._IsTradeUnionMember != value))
				{
					this.OnIsTradeUnionMemberChanging(value);
					this.SendPropertyChanging();
					this._IsTradeUnionMember = value;
					this.SendPropertyChanged("IsTradeUnionMember");
					this.OnIsTradeUnionMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PochFondLimit", DbType="Int NOT NULL")]
		public int PochFondLimit
		{
			get
			{
				return this._PochFondLimit;
			}
			set
			{
				if ((this._PochFondLimit != value))
				{
					this.OnPochFondLimitChanging(value);
					this.SendPropertyChanging();
					this._PochFondLimit = value;
					this.SendPropertyChanged("PochFondLimit");
					this.OnPochFondLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Rate", Storage="_Employee", ThisKey="EmployeeID", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Rate.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Rate.Add(this);
						this._EmployeeID = value.Id;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Rate", Storage="_Post", ThisKey="PostID", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Rate.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Rate.Add(this);
						this._PostID = value.Id;
					}
					else
					{
						this._PostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_Rate", Storage="_SchoolYear", ThisKey="SchoolYearID", OtherKey="ID", IsForeignKey=true)]
		public SchoolYear SchoolYear
		{
			get
			{
				return this._SchoolYear.Entity;
			}
			set
			{
				SchoolYear previousValue = this._SchoolYear.Entity;
				if (((previousValue != value) 
							|| (this._SchoolYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolYear.Entity = null;
						previousValue.Rate.Remove(this);
					}
					this._SchoolYear.Entity = value;
					if ((value != null))
					{
						value.Rate.Add(this);
						this._SchoolYearID = value.ID;
					}
					else
					{
						this._SchoolYearID = default(int);
					}
					this.SendPropertyChanged("SchoolYear");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class SchoolYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Years;
		
		private EntitySet<CourseInWork> _CourseInWork;
		
		private EntitySet<GroupInSemestr> _GroupInSemestr;
		
		private EntitySet<PostSalary> _PostSalary;
		
		private EntitySet<Rate> _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnYearsChanging(string value);
    partial void OnYearsChanged();
    #endregion
		
		public SchoolYear()
		{
			this._CourseInWork = new EntitySet<CourseInWork>(new Action<CourseInWork>(this.attach_CourseInWork), new Action<CourseInWork>(this.detach_CourseInWork));
			this._GroupInSemestr = new EntitySet<GroupInSemestr>(new Action<GroupInSemestr>(this.attach_GroupInSemestr), new Action<GroupInSemestr>(this.detach_GroupInSemestr));
			this._PostSalary = new EntitySet<PostSalary>(new Action<PostSalary>(this.attach_PostSalary), new Action<PostSalary>(this.detach_PostSalary));
			this._Rate = new EntitySet<Rate>(new Action<Rate>(this.attach_Rate), new Action<Rate>(this.detach_Rate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Years", DbType="NVarChar(9)")]
		public string Years
		{
			get
			{
				return this._Years;
			}
			set
			{
				if ((this._Years != value))
				{
					this.OnYearsChanging(value);
					this.SendPropertyChanging();
					this._Years = value;
					this.SendPropertyChanged("Years");
					this.OnYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_CourseInWork", Storage="_CourseInWork", ThisKey="ID", OtherKey="SchoolYearID")]
		public EntitySet<CourseInWork> CourseInWork
		{
			get
			{
				return this._CourseInWork;
			}
			set
			{
				this._CourseInWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_GroupInSemestr", Storage="_GroupInSemestr", ThisKey="ID", OtherKey="SchoolYear")]
		public EntitySet<GroupInSemestr> GroupInSemestr
		{
			get
			{
				return this._GroupInSemestr;
			}
			set
			{
				this._GroupInSemestr.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_PostSalary", Storage="_PostSalary", ThisKey="ID", OtherKey="SchoolYearID")]
		public EntitySet<PostSalary> PostSalary
		{
			get
			{
				return this._PostSalary;
			}
			set
			{
				this._PostSalary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolYear_Rate", Storage="_Rate", ThisKey="ID", OtherKey="SchoolYearID")]
		public EntitySet<Rate> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				this._Rate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYear = this;
		}
		
		private void detach_CourseInWork(CourseInWork entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYear = null;
		}
		
		private void attach_GroupInSemestr(GroupInSemestr entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYearSchoolYear = this;
		}
		
		private void detach_GroupInSemestr(GroupInSemestr entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYearSchoolYear = null;
		}
		
		private void attach_PostSalary(PostSalary entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYear = this;
		}
		
		private void detach_PostSalary(PostSalary entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYear = null;
		}
		
		private void attach_Rate(Rate entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYear = this;
		}
		
		private void detach_Rate(Rate entity)
		{
			this.SendPropertyChanging();
			entity.SchoolYear = null;
		}
	}
}
#pragma warning restore 1591
